'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const _rollupPluginBabelHelpers = require('../_virtual/_rollupPluginBabelHelpers.js');

const os = require('os');

const React = require('react');

const cli = require('@boost/cli');

const Base = require('./Base.js');

const _interopDefault = e => e && e.__esModule ? e : {
  default: e
};

const os__default = /*#__PURE__*/_interopDefault(os);

const React__default = /*#__PURE__*/_interopDefault(React);

var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

let BuildCommand = (_dec = cli.Config('build', 'Build standardized packages for distribution'), _dec2 = cli.Arg.Flag('Add `engine` versions to each `package.json`'), _dec3 = cli.Arg.Flag('Add `exports` fields to each `package.json`'), _dec4 = cli.Arg.String('Visualize and analyze all generated builds', {
  choices: ['none', 'sunburst', 'treemap', 'network']
}), _dec5 = cli.Arg.Number('Number of builds to run in parallel'), _dec6 = cli.Arg.String('Generate TypeScript declarations for each package', {
  choices: ['none', 'standard', 'api']
}), _dec7 = cli.Arg.String('Path to a custom `tsconfig` for declaration building'), _dec8 = cli.Arg.Number('Timeout in milliseconds before a build is cancelled'), _dec(_class = (_class2 = class BuildCommand extends Base.BaseCommand {
  constructor(...args) {
    super(...args);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "addEngines", _descriptor, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "addExports", _descriptor2, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "analyze", _descriptor3, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "concurrency", _descriptor4, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "declaration", _descriptor5, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "declarationConfig", _descriptor6, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "timeout", _descriptor7, this);
  }

  async run() {
    const _await$Promise$resolv = await Promise.resolve().then(() => require('../components/Build/index.js')),
          Build = _await$Promise$resolv.Build;

    return /*#__PURE__*/React__default.default.createElement(Build, {
      addEngines: this.addEngines,
      addExports: this.addExports,
      analyze: this.analyze,
      concurrency: this.concurrency,
      declaration: this.declaration,
      declarationConfig: this.declarationConfig,
      filter: this.filter,
      filterFormats: this.formats,
      filterPlatforms: this.platforms,
      packemon: this.packemon,
      skipPrivate: this.skipPrivate,
      timeout: this.timeout
    });
  }

}, (_descriptor = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "addEngines", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return false;
  }
}), _descriptor2 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "addExports", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return false;
  }
}), _descriptor3 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "analyze", [_dec4], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return 'none';
  }
}), _descriptor4 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "concurrency", [_dec5], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return os__default.default.cpus().length;
  }
}), _descriptor5 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "declaration", [_dec6], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return 'none';
  }
}), _descriptor6 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "declarationConfig", [_dec7], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return 'tsconfig.json';
  }
}), _descriptor7 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class2.prototype, "timeout", [_dec8], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return 0;
  }
})), _class2)) || _class);
exports.BuildCommand = BuildCommand;
//# sourceMappingURL=Build.js.map
