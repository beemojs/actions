'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const _rollupPluginBabelHelpers = require('../_virtual/_rollupPluginBabelHelpers.js');

const React = require('react');

const ink = require('ink');

const Spinner = require('ink-spinner');

const react = require('@boost/cli/react');

const CodeArtifact = require('../CodeArtifact.js');

const constants = require('../constants.js');

const CodeTarget = require('./CodeTarget.js');

const Duration = require('./Duration.js');

const Target = require('./Target.js');

const _interopDefault = e => e && e.__esModule ? e : {
  default: e
};

const React__default = /*#__PURE__*/_interopDefault(React);

const Spinner__default = /*#__PURE__*/_interopDefault(Spinner);

function ArtifactRow({
  artifact
}) {
  return /*#__PURE__*/React__default.default.createElement(ink.Box, {
    flexDirection: "row",
    paddingLeft: 1
  }, artifact.getBuildTargets().map((target, index) => {
    const props = {
      target,
      state: artifact.state
    };

    if (artifact instanceof CodeArtifact.CodeArtifact) {
      return /*#__PURE__*/React__default.default.createElement(CodeTarget.CodeTarget, _rollupPluginBabelHelpers.extends({
        key: target
      }, props, {
        stats: artifact.builds[index].stats
      }));
    }

    return /*#__PURE__*/React__default.default.createElement(Target.Target, _rollupPluginBabelHelpers.extends({
      key: target
    }, props));
  }), /*#__PURE__*/React__default.default.createElement(ink.Box, {
    marginLeft: 1
  }, artifact.isComplete() ? /*#__PURE__*/React__default.default.createElement(Duration.Duration, {
    time: artifact.buildResult.time
  }) : /*#__PURE__*/React__default.default.createElement(react.Style, {
    type: "muted"
  }, constants.STATE_LABELS[artifact.state])), artifact.isRunning() && /*#__PURE__*/React__default.default.createElement(ink.Box, {
    marginLeft: 1
  }, /*#__PURE__*/React__default.default.createElement(react.Style, {
    type: "warning"
  }, /*#__PURE__*/React__default.default.createElement(Spinner__default.default, {
    type: "dots"
  }))));
}

exports.ArtifactRow = ArtifactRow;
//# sourceMappingURL=ArtifactRow.js.map
