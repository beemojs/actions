#!/usr/bin/env node
'use strict';

const cli = require('@boost/cli');

const getVersion = require('./helpers/getVersion.js');

require('./index.js');

const Build = require('./commands/Build.js');

const Clean = require('./commands/Clean.js');

const Init = require('./commands/Init.js');

const Pack = require('./commands/Pack.js');

const Scaffold = require('./commands/Scaffold.js');

const Validate = require('./commands/Validate.js');

const Watch = require('./commands/Watch.js');

let version = '0.0.0-internal';

try {
  version = getVersion.getVersion();
} catch {// Ignore
}

async function run() {
  const program = new cli.Program({
    bin: 'packemon',
    footer: 'Documentation: https://packemon.dev',
    name: 'Packemon',
    version
  });
  program.categories({
    filter: 'Filtering'
  }).middleware(cli.checkPackageOutdated('packemon', version)).register(new Build.BuildCommand()).register(new Clean.CleanCommand()).register(new Init.InitCommand()).register(new Pack.PackCommand()).register(new Scaffold.ScaffoldCommand()).register(new Validate.ValidateCommand()).register(new Watch.WatchCommand());
  await program.runAndExit(process.argv);
}

void run();
//# sourceMappingURL=bin.js.map
