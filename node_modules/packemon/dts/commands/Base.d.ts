import { Command, GlobalOptions, PrimitiveType } from '@boost/cli';
import { Packemon } from '../Packemon';
import { BuildOptions } from '../types';
export interface CommonOptions {
    cwd: string;
    skipPrivate: boolean;
}
export declare abstract class BaseCommand<O extends object = {}, P extends PrimitiveType[] = string[]> extends Command<CommonOptions & GlobalOptions & O, P> {
    cwd: string;
    filter: string;
    formats: string;
    platforms: string;
    skipPrivate: boolean;
    protected get packemon(): Packemon;
    protected getBuildOptions(): BuildOptions;
}
//# sourceMappingURL=Base.d.ts.map