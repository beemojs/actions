import { Path } from '@boost/common';
import { Debugger } from '@boost/debug';
import { Artifact } from './Artifact';
import { Project } from './Project';
import { BuildOptions, FeatureFlags, InputMap, PackageConfig, PackemonPackage, PackemonPackageConfig, TSConfigStructure } from './types';
export declare class Package {
    readonly artifacts: Artifact[];
    readonly configs: PackageConfig[];
    readonly debug: Debugger;
    readonly packageJson: PackemonPackage;
    readonly packageJsonPath: Path;
    readonly path: Path;
    readonly project: Project;
    root: boolean;
    constructor(project: Project, path: Path, contents: PackemonPackage);
    addArtifact(artifact: Artifact): Artifact;
    build(options: BuildOptions): Promise<void>;
    cleanup(): Promise<void>;
    getName(): string;
    getFeatureFlags(): FeatureFlags;
    getSlug(): string;
    getSourceFiles(): string[];
    hasDependency(name: string): boolean;
    isComplete(): boolean;
    isRunning(): boolean;
    setConfigs(configs: PackemonPackageConfig[]): void;
    syncPackageJson(): Promise<void>;
    get tsconfigJson(): TSConfigStructure | undefined;
    protected addEngines(): void;
    protected addEntryPoints(): void;
    protected addExports(): void;
    protected getSourceFileExts(inputs: InputMap): string[];
}
//# sourceMappingURL=Package.d.ts.map