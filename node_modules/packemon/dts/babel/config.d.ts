import { TransformOptions as ConfigStructure } from '@babel/core';
import { CodeArtifact } from '../CodeArtifact';
import { FeatureFlags, Format, Platform, Support } from '../types';
export interface PresetEnvOptions {
    browserslistEnv?: string;
    bugfixes?: boolean;
    corejs?: 2 | 3 | {
        version: 2 | 3;
        proposals: boolean;
    };
    debug?: boolean;
    exclude?: string[];
    forceAllTransforms?: boolean;
    ignoreBrowserslistConfig?: boolean;
    include?: string[];
    loose?: boolean;
    modules?: 'amd' | 'auto' | 'cjs' | 'commonjs' | 'systemjs' | 'umd' | false;
    shippedProposals?: boolean;
    spec?: boolean;
    targets?: Record<string, string[] | string> | string[] | string;
    useBuiltIns?: 'entry' | 'usage' | false;
}
export declare function getBabelInputConfig(artifact: CodeArtifact, features: FeatureFlags): Omit<ConfigStructure, 'exclude' | 'include'>;
export declare function getBabelOutputConfig(platform: Platform, support: Support, format: Format, features: FeatureFlags): ConfigStructure;
//# sourceMappingURL=config.d.ts.map