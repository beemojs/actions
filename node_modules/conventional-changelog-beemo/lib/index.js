"use strict";
/**
 * @copyright   2019, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = exports.getTypeGroup = exports.checkCommitFormat = void 0;
const checkCommitFormat_1 = __importDefault(require("./checkCommitFormat"));
exports.checkCommitFormat = checkCommitFormat_1.default;
const conventionalChangelog_1 = __importDefault(require("./conventionalChangelog"));
const getTypeGroup_1 = __importDefault(require("./getTypeGroup"));
exports.getTypeGroup = getTypeGroup_1.default;
const parserOpts_1 = __importDefault(require("./parserOpts"));
const recommendedBumpOpts_1 = __importDefault(require("./recommendedBumpOpts"));
const writerOpts_1 = __importDefault(require("./writerOpts"));
__exportStar(require("./constants"), exports);
__exportStar(require("./types"), exports);
exports.config = Promise.resolve({
    conventionalChangelog: conventionalChangelog_1.default,
    parserOpts: parserOpts_1.default,
    recommendedBumpOpts: recommendedBumpOpts_1.default,
    writerOpts: writerOpts_1.default,
});
