import { Blueprint, ConfigContext, Driver, DriverContext, Path, Predicates } from '@beemo/core';
import { Event } from '@boost/event';
import { TypeScriptConfig, TypeScriptOptions } from './types';
export declare class TypeScriptDriver extends Driver<TypeScriptConfig, TypeScriptOptions> {
    readonly name = "@beemo/driver-typescript";
    readonly onCreateProjectConfigFile: Event<[Path, TypeScriptConfig, boolean], string>;
    blueprint(preds: Predicates): Blueprint<TypeScriptOptions>;
    bootstrap(): void;
    /**
     * Automatically clean the target folder if `outDir` and `--clean` is used.
     */
    handleCleanTarget: (context: DriverContext) => Promise<void>;
    /**
     * Extract compiler options from the root config into a separate config purely for
     * extending options. Update the root config with references to all workspaces.
     */
    handlePrepareConfigs: (context: ConfigContext, configPath: Path, config: TypeScriptConfig) => void;
}
//# sourceMappingURL=TypeScriptDriver.d.ts.map