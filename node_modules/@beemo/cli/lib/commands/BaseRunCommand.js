'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const _rollupPluginBabelHelpers = require('../_virtual/_rollupPluginBabelHelpers.js');

const React = require('react');

const cli = require('@boost/cli');

const setup = require('../setup.js');

function _interopDefault(e) {
  return e && e.__esModule ? e : {
    'default': e
  };
}

const React__default = /*#__PURE__*/_interopDefault(React);

var _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3;

let BaseRunCommand = (_dec = cli.Arg.Number(setup.tool.msg('app:cliOptionConcurrency')), _dec2 = cli.Arg.Flag(setup.tool.msg('app:cliOptionGraph')), _dec3 = cli.Arg.String(setup.tool.msg('app:cliOptionWorkspaces')), (_class = class BaseRunCommand extends cli.Command {
  constructor(...args) {
    super(...args);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "concurrency", _descriptor, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "graph", _descriptor2, this);

    _rollupPluginBabelHelpers.initializerDefineProperty(this, "workspaces", _descriptor3, this);
  }

  async renderDriver(pipeline) {
    const _await$Promise$resolv = await Promise.resolve().then(function () {
      return require('../components/App.js');
    }),
          App = _await$Promise$resolv.App;

    const driver = pipeline.context.primaryDriver;
    let hasError = false;

    try {
      await this.render( /*#__PURE__*/React__default["default"].createElement(App, {
        outputStrategy: driver.getOutputStrategy(),
        pipeline: pipeline
      }));
    } catch (error) {
      hasError = true;
      throw error;
    } finally {
      if (driver.getOutputStrategy() === 'buffer' || driver.getOutputStrategy() === 'none' && hasError) {
        if (driver.output.stdout) {
          console.log(driver.output.stdout);
        }

        if (driver.output.stderr) {
          console.error(driver.output.stderr);
        }
      }
    }
  }

}, (_descriptor = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class.prototype, "concurrency", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return 0;
  }
}), _descriptor2 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class.prototype, "graph", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return false;
  }
}), _descriptor3 = _rollupPluginBabelHelpers.applyDecoratedDescriptor(_class.prototype, "workspaces", [_dec3], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: function () {
    return '';
  }
})), _class));
exports.BaseRunCommand = BaseRunCommand;
//# sourceMappingURL=BaseRunCommand.js.map
