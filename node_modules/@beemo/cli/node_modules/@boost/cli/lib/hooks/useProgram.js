'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

Object.defineProperty(exports, '__esModule', {
  value: true
});

var React = require('react');

var ink = require('ink');

var common = require('@boost/common');

var constants = require('../constants.js');

var ProgramContext = require('../ProgramContext.js');

function useProgram() {
  const _ink$useApp = ink.useApp(),
        appExit = _ink$useApp.exit;

  const program = React.useContext(ProgramContext.ProgramContext);
  const exit = React.useCallback((error, code) => {
    if (error) {
      appExit(new common.ExitError(error instanceof Error ? error.message : error, code !== null && code !== void 0 ? code : constants.EXIT_FAIL));
    } else {
      appExit(new common.ExitError('', constants.EXIT_PASS));
    }
  }, [appExit]);
  return _objectSpread(_objectSpread({}, program), {}, {
    exit
  });
}

exports.useProgram = useProgram;
//# sourceMappingURL=useProgram.js.map
