'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

const config = require('@boost/config');

class Config extends config.Configuration {
  blueprint(predicates, onConstruction) {
    const bool = predicates.bool,
          number = predicates.number,
          object = predicates.object,
          shape = predicates.shape,
          string = predicates.string;
    const moduleSchema = string(process.env.BEEMO_CONFIG_MODULE);
    return {
      configure: shape({
        cleanup: bool(false),
        parallel: bool(true)
      }),
      debug: bool(),
      drivers: config.createPluginsPredicate(predicates),
      execute: shape({
        concurrency: number(3).gt(0),
        graph: bool(true),
        // Optimal requires a fix upstream. Does not support empty strings!
        output: string()
        /* .oneOf<ConfigExecuteStrategy>([
        '',
        STRATEGY_BUFFER,
        STRATEGY_PIPE,
        STRATEGY_STREAM,
        STRATEGY_NONE,
        ]), */

      }),
      module: onConstruction ? moduleSchema : moduleSchema.required().notEmpty(),
      scripts: config.createPluginsPredicate(predicates),
      settings: object()
    };
  }

  bootstrap() {
    this.addProcessHandler('drivers', config.mergePlugins);
    this.addProcessHandler('scripts', config.mergePlugins);
  }

}

exports.Config = Config;
//# sourceMappingURL=Config.js.map
