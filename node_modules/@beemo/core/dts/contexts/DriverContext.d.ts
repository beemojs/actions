import { Driver } from '../Driver';
import { Arguments, Argv } from '../types';
import { ConfigContext } from './ConfigContext';
export interface DriverContextOptions {
    concurrency: number;
    graph: boolean;
    workspaces: string;
}
export declare type DriverContextParams = [string];
export declare class DriverContext<O extends DriverContextOptions = DriverContextOptions> extends ConfigContext<O> {
    driverName: string;
    parallelArgv: Argv[];
    primaryDriver: Driver;
    constructor(args: Arguments<O>, driver: Driver, parallelArgv?: Argv[]);
    /**
     * Add a parallel command with additional argv.
     */
    addParallelCommand(argv: Argv): this;
}
//# sourceMappingURL=DriverContext.d.ts.map