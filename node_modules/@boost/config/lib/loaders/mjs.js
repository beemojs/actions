'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var url = require('url');

var _import = require('./supports/import.js');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);

  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () {
            return e[k];
          }
        });
      }
    });
  }

  n['default'] = e;
  return Object.freeze(n);
}

async function loadMjs(path) {
  if (!_import.supportsImport) {
    throw new Error(`Unable to use \`mjs\` loader. Native ECMAScript modules aren't supported by this platform. Found Node.js v${process.version}, requires v13.3.`);
  } // import() expects URLs, not file paths.
  // https://github.com/nodejs/node/issues/31710
  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment


  const mod = await Promise.resolve().then(function () {
    return /*#__PURE__*/_interopNamespace(require(url.pathToFileURL(path.path()).toString()));
  });
  return mod.default;
}

exports.loadMjs = loadMjs;
//# sourceMappingURL=mjs.js.map
