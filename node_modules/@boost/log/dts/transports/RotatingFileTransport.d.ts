import { Blueprint, Predicates } from '@boost/common';
import { Rotation } from '../types';
import { FileTransport, FileTransportOptions } from './FileTransport';
export interface RotatingFileTransportOptions extends FileTransportOptions {
    /** Period in which to rotate files. Will append a timestamp to the rotated log file. */
    rotation: Rotation;
}
export declare class RotatingFileTransport extends FileTransport<RotatingFileTransportOptions> {
    protected lastTimestamp: string;
    blueprint(predicates: Predicates): Blueprint<RotatingFileTransportOptions>;
    /**
     * Format a `Date` object into a format used within the log file name.
     */
    formatTimestamp(ms: number): string;
    /**
     * @inheritdoc
     */
    protected checkIfNeedsRotation(): void;
    /**
     * @inheritdoc
     */
    protected getRotatedFileName(): string;
    /**
     * @inheritdoc
     */
    protected rotateFile(): void;
}
//# sourceMappingURL=RotatingFileTransport.d.ts.map