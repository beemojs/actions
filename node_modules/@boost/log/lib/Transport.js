'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var os = require('os');

var common = require('@boost/common');

var constants = require('./constants.js');

var formats = require('./formats.js');

function _interopDefault(e) {
  return e && e.__esModule ? e : {
    'default': e
  };
}

var os__default = /*#__PURE__*/_interopDefault(os);

class Transport extends common.Contract {
  constructor(options) {
    super(options);
    this.levels = [];
    this.levels = this.options.levels;
  }

  blueprint(predicates) {
    const array = predicates.array,
          func = predicates.func,
          string = predicates.string;
    return {
      eol: string(os__default['default'].EOL),
      format: func().nullable(),
      levels: array(string().oneOf(constants.LOG_LEVELS))
    };
  }
  /**
   * Format the log item into a message string, and append a trailing newline if missing.
   */


  format(item) {
    const _this$options = this.options,
          eol = _this$options.eol,
          format = _this$options.format;
    let output = typeof format === 'function' ? format(item) : formats.debug(item);

    if (!output.endsWith(eol)) {
      output += String(eol);
    }

    return output;
  }
  /**
   * Write the formatted message according to the transport.
   */


}

exports.Transport = Transport;
//# sourceMappingURL=Transport.js.map
